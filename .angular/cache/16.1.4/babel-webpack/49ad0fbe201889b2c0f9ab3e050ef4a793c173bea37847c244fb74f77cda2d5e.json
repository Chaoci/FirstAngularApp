{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction CartComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, item_r1.price));\n  }\n}\nexport class CartComponent {\n  constructor(cartService, formBuilder) {\n    this.cartService = cartService;\n    this.formBuilder = formBuilder;\n    this.items = this.cartService.getItems();\n    //收集使用者的姓名和地址，請使用 FormBuilder 的 group() 方法來把 checkoutForm 屬性設定為一個包含 name 和 address 欄位的表單模型。\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n  }\n  clearCart() {\n    if (this.items.length > 0) {\n      this.items = this.cartService.clearCart();\n    } else if (this.items.length == 0) {\n      window.alert('Your Cart is already empty!');\n    }\n    window.alert('Clear the Cart!');\n  }\n  onSubmit() {\n    // Process checkout data here\n    // step1 clear cart\n    this.items = this.cartService.clearCart();\n    // step2 tell people complete the submition\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    // step3 reset the form\n    this.checkoutForm.reset();\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[\"routerLink\", \"/shipping\"], [\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\"], [\"type\", \"submit\", 1, \"button\"], [1, \"cart-item\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Cart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\")(3, \"a\", 0);\n      i0.ɵɵtext(4, \"Shipping Prices\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, CartComponent_div_5_Template, 6, 4, \"div\", 1);\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function CartComponent_Template_button_click_6_listener() {\n        return ctx.clearCart();\n      });\n      i0.ɵɵtext(7, \"Clear Products\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function CartComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 4);\n      i0.ɵɵtext(11, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\", 6);\n      i0.ɵɵtext(15, \" Address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 8);\n      i0.ɵɵtext(18, \"Purchase\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.RouterLink, i3.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","name","ɵɵpipeBind1","price","CartComponent","constructor","cartService","formBuilder","items","getItems","checkoutForm","group","address","clearCart","length","window","alert","onSubmit","console","warn","value","reset","ɵɵdirectiveInject","i1","CartService","i2","FormBuilder","selectors","decls","vars","consts","template","CartComponent_Template","rf","ctx","ɵɵtemplate","CartComponent_div_5_Template","ɵɵlistener","CartComponent_Template_button_click_6_listener","CartComponent_Template_form_ngSubmit_8_listener","ɵɵelement","ɵɵproperty"],"sources":["E:\\FirstAngularApp\\src\\app\\cart\\cart.component.ts","E:\\FirstAngularApp\\src\\app\\cart\\cart.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css'],\n})\nexport class CartComponent {\n  items = this.cartService.getItems();\n\n  //收集使用者的姓名和地址，請使用 FormBuilder 的 group() 方法來把 checkoutForm 屬性設定為一個包含 name 和 address 欄位的表單模型。\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: '',\n  });\n  constructor(\n    private cartService: CartService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  clearCart(){\n    if(this.items.length > 0){\n      this.items = this.cartService.clearCart();\n    }\n    else if (this.items.length == 0){\n      window.alert('Your Cart is already empty!');\n    }\n    window.alert('Clear the Cart!');\n  }\n\n  onSubmit(): void {\n    // Process checkout data here\n    // step1 clear cart\n    this.items = this.cartService.clearCart();\n    // step2 tell people complete the submition\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    // step3 reset the form\n    this.checkoutForm.reset();\n  }\n}\n","<h3>Cart</h3>\n\n<p>\n  <a routerLink=\"/shipping\">Shipping Prices</a>\n</p>\n<div class=\"cart-item\" *ngFor=\"let item of items\">\n  <span>{{ item.name }}</span>\n  <span>{{ item.price | currency }}</span>\n</div>\n\n<button type=\"button\" (click)=\"clearCart()\">Clear Products</button>\n\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label for=\"name\"> Name </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\" />\n  </div>\n\n  <div>\n    <label for=\"address\"> Address </label>\n    <input id=\"address\" type=\"text\" formControlName=\"address\" />\n  </div>\n  <button class=\"button\" type=\"submit\">Purchase</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}